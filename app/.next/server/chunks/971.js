"use strict";exports.id=971,exports.ids=[971],exports.modules={1925:(e,t,r)=>{r.a(e,async(e,a)=>{try{r.d(t,{m:()=>l});var i=r(9648),o=r(9508),c=r(420),s=e([i]);i=(s.then?(await s)():s)[0];class n{constructor(){this.apiUrl=process.env.COINGECKO_API_URL||"https://api.coingecko.com/api/v3"}async fetchCurrentPrice(){try{let e=await i.default.get(`${this.apiUrl}/simple/price`,{params:{ids:"bitcoin",vs_currencies:"usd"},timeout:1e4}),t=e.data?.bitcoin?.usd;if(!t)throw Error("Invalid response from CoinGecko API");return o.logger.info(`Fetched Bitcoin price: $${t}`),t}catch(t){o.logger.error("Error fetching Bitcoin price:",t);let e=await this.getLastPrice();if(e)return o.logger.warn(`Using last known Bitcoin price: $${e.price}`),e.price;throw t}}async updatePrice(){let e=await this.fetchCurrentPrice();return await c.db.run("INSERT INTO bitcoin_prices (price, currency, timestamp) VALUES (?, ?, datetime('now'))",[e,"USD"]),{price:e,currency:"USD",timestamp:new Date().toISOString()}}async getLastPrice(){return await c.db.get("SELECT * FROM bitcoin_prices ORDER BY timestamp DESC LIMIT 1")}async getPriceHistory(e=24){return await c.db.all(`SELECT * FROM bitcoin_prices 
       WHERE timestamp > datetime('now', '-' || ? || ' hours')
       ORDER BY timestamp DESC`,[e])}}let l=new n;a()}catch(e){a(e)}})},971:(e,t,r)=>{r.a(e,async(e,a)=>{try{r.d(t,{schedulerService:()=>d});var i=r(8311),o=r(9508),c=r(1925),s=r(5914),n=r(5232),l=e([c,s]);[c,s]=l.then?(await l)():l;class p{start(){let e=process.env.BITCOIN_PRICE_UPDATE_INTERVAL||"30",t=`*/${e} * * * *`,r=i.schedule(t,async()=>{o.logger.info("Running scheduled Bitcoin price update");try{await c.m.updatePrice()}catch(e){o.logger.error("Failed to update Bitcoin price:",e)}});this.tasks.push(r);let a=process.env.STOCK_PRICE_UPDATE_INTERVAL||"30",l=`*/${a} * * * *`,p=i.schedule(l,async()=>{let e=s.N.isMarketOpen();o.logger.info(`Running scheduled stock price update (market ${e?"open":"closed"})`);try{e?await s.N.updateAllStockPrices():new Date().getHours()%2==0?(o.logger.info("Updating major holdings during market closure"),await s.N.updateAllStockPrices()):o.logger.info("Skipping stock price update (market closed, not scheduled hour)")}catch(e){o.logger.error("Failed to update stock prices:",e)}});this.tasks.push(p);let d=parseInt(process.env.HOLDINGS_UPDATE_INTERVAL||"360"),u=Math.floor(d/60),g=`0 */${u} * * *`,h=i.schedule(g,async()=>{o.logger.info("Running scheduled holdings update");try{await n.l.updateCompaniesFromScraper()}catch(e){o.logger.error("Failed to update holdings data:",e)}});this.tasks.push(h),o.logger.info("Scheduler service started with the following tasks:"),o.logger.info(`- Bitcoin price update: every ${e} minutes`),o.logger.info(`- Stock price update: every ${a} minutes (market hours), every 2 hours (market closed)`),o.logger.info(`- Holdings update: every ${u} hours`),this.runInitialUpdates()}async runInitialUpdates(){o.logger.info("Running initial data updates");try{try{await n.l.updateCompaniesFromScraper()}catch(e){o.logger.warn("Scraper failed, using seed data:",e)}await c.m.updatePrice(),o.logger.info("Fetching initial stock prices..."),await s.N.updateAllStockPrices()}catch(e){o.logger.error("Error during initial updates:",e)}}stop(){this.tasks.forEach(e=>e.stop()),this.tasks=[],o.logger.info("Scheduler service stopped")}constructor(){this.tasks=[]}}let d=new p;a()}catch(e){a(e)}})},5914:(e,t,r)=>{r.a(e,async(e,a)=>{try{r.d(t,{N:()=>l});var i=r(9648),o=r(9508),c=r(420),s=e([i]);i=(s.then?(await s)():s)[0];class n{constructor(){this.yahooFinanceUrl=process.env.YAHOO_FINANCE_API_URL||"https://query1.finance.yahoo.com/v8/finance"}async fetchStockPrice(e){let t;try{let t=await i.default.get(`${this.yahooFinanceUrl}/chart/${e}`,{headers:{"User-Agent":process.env.USER_AGENT||"Mozilla/5.0 (compatible; BTC-Treasury-Bot/1.0)"},timeout:1e4}),r=t.data?.chart?.result?.[0];if(!r)throw Error(`No data found for ticker ${e}`);let a=r.meta,c=a.regularMarketPrice||a.previousClose,s=a.sharesOutstanding;if(!c)throw Error(`No price data found for ticker ${e}`);return o.logger.info(`Fetched stock price for ${e}: $${c}`),{price:c,sharesOutstanding:s}}catch(r){t=r,o.logger.warn(`Primary API failed for ${e}, trying fallback:`,r)}try{let t=await i.default.get(`https://finance.yahoo.com/quote/${e}`,{headers:{"User-Agent":process.env.USER_AGENT||"Mozilla/5.0 (compatible; BTC-Treasury-Bot/1.0)"},timeout:1e4}),r=t.data.match(/regularMarketPrice":{"raw":(\d+\.?\d*)/),a=t.data.match(/sharesOutstanding":{"raw":(\d+)/);if(r){let t=parseFloat(r[1]),i=a?parseInt(a[1]):void 0;return o.logger.info(`Fetched stock price for ${e} via fallback: $${t}`),{price:t,sharesOutstanding:i}}}catch(t){o.logger.error(`Fallback API also failed for ${e}:`,t)}try{let t=await this.getLastPrice(e);if(t)return o.logger.warn(`Using last known price for ${e}: $${t.price}`),{price:t.price}}catch(t){o.logger.error(`Failed to get last known price for ${e}:`,t)}throw o.logger.error(`All attempts failed for ${e}`),Error(`Failed to fetch stock price for ${e}: ${t.message}`)}async updateStockPrice(e){let{price:t,sharesOutstanding:r}=await this.fetchStockPrice(e);return await c.db.run("INSERT INTO stock_prices (ticker, price, currency, timestamp) VALUES (?, ?, ?, datetime('now'))",[e,t,"USD"]),r&&await c.db.run("UPDATE companies SET shares_outstanding = ?, updated_at = datetime('now') WHERE ticker = ?",[r/1e6,e]),o.logger.info(`Updated stock price for ${e}: $${t}`),{ticker:e,price:t,currency:"USD",timestamp:new Date().toISOString()}}async updateAllStockPrices(){for(let e of(await c.db.all("SELECT ticker FROM companies")))try{await this.updateStockPrice(e.ticker),await new Promise(e=>setTimeout(e,1e3))}catch(t){o.logger.error(`Failed to update price for ${e.ticker}:`,t)}}async getLastPrice(e){return await c.db.get("SELECT * FROM stock_prices WHERE ticker = ? ORDER BY timestamp DESC LIMIT 1",[e])}async getPriceHistory(e,t=24){return await c.db.all(`SELECT * FROM stock_prices 
       WHERE ticker = ? AND timestamp > datetime('now', '-' || ? || ' hours')
       ORDER BY timestamp DESC`,[e,t])}isMarketOpen(){let e=new Date,t=new Date(e.toLocaleString("en-US",{timeZone:"America/New_York"})),r=t.getDay(),a=t.getHours(),i=t.getMinutes();return r>=1&&r<=5&&(9===a&&i>=30||a>9&&a<16)}}let l=new n;a()}catch(e){a(e)}})}};